for(k in 1:length(party.indexes)){
ticket.party.size[party.indexes[k]] <- length(party.indexes)
avg.fare[party.indexes[k]] <- current.avg.fare
}
}
data.combined$ticket.party.size <- ticket.party.size
data.combined$avg.fare <- avg.fare
View(data.combined)
ticket.party.size <- rep(0,nrow(data.combined))
avg.fare <- rep(0.0, nrow(data.combined))
tickets<- unique(data.combined$ticket)
for(i in 1:length(tickets)){
current.ticket <- tickets[i]
party.indexes <- which(data.combined$ticket == current.ticket)
current.avg.fare<-data.combined[party.indexes[1],"Fare"]/length(party.indexes)
for(k in 1:length(party.indexes)){
ticket.party.size[party.indexes[k]] <- length(party.indexes)
avg.fare[party.indexes[k]] <- current.avg.fare
}
}
data.combined$ticket.party.size <- ticket.party.size
data.combined$avg.fare <- avg.fare
View(data.combined)
ticket.party.size <- rep(0,nrow(data.combined))
avg.fare <- rep(0.0, nrow(data.combined))
tickets<- unique(data.combined$ticket)
ticket.party.size <- rep(0,nrow(data.combined))
avg.fare <- rep(0.0, nrow(data.combined))
tickets <- unique(data.combined$Ticket)
for(i in 1:length(tickets)){
current.ticket <- tickets[i]
party.indexes <- which(data.combined$Ticket == current.ticket)
current.avg.fare<-data.combined[party.indexes[1],"Fare"]/length(party.indexes)
for(k in 1:length(party.indexes)){
ticket.party.size[party.indexes[k]] <- length(party.indexes)
avg.fare[party.indexes[k]] <- current.avg.fare
}
}
data.combined$ticket.party.size <- ticket.party.size
data.combined$avg.fare <- avg.fare
View(data.combined)
first.mr.df <-data.combined[indexes.first.mr, ]
summary(first.mr.df)
ggplot(first.mr.df, aes(x=ticket.party.size, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df, aes(x=avg.fare, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df[first.mr.df$Survived!="None"], aes(x=avg.fare, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df[first.mr.df$Survived!="None",], aes(x=avg.fare, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
data.combined[is.na(avg.fare), "avg.fare"] <- 7,840
data.combined[is.na(avg.fare), "avg.fare"] <- 7.840
features <- c("Pclass", "new.title", "family.size", "ticket.party.size", "avg.fare")
rpart.train.3 <-data.combined[1:891, features]
rpart.3.cv.1 <-rpart.cv(94622, rpart.train.3, rf.label, ctrl.3)
rpart.3.cv.1
prp(rpart.3.cv.1$finalModel, type =0, extra = 1, under = TRUE)
rpart.3.cv.1
prp(rpart.3.cv.1$finalModel, type =0, extra = 1, under = TRUE)
rf.temp <- randomForest(x=rf.train.temp, y=rf.label, ntree=1000)
features <- c("Pclass", "new.title", "ticket.party.size", "avg.fare")
rf.train.temp <-data.combined[1:891, features]
set.seed(1234)
rf.temp <- randomForest(x=rf.train.temp, y=rf.label, ntree=1000)
rf.temp
rf.preds = predict(rf.temp, test.submit.df)
rf.preds <- predict(rf.temp, test.submit.df)
table(rf.preds)
rf.label
install.packages("infotheo")
mutinformation(rf.label, data.combined$Pclass[1:891])
install.packages("infotheo")
library(infotheo)
mutinformation(rf.label, data.combined$Pclass[1:891])
table(data.combined$Survived)
table(data.combined$Pclass)
table(data.combined$Survived)
#Read in train and test data
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test.csv", header = TRUE)
#Combine test set and train set
test.survived <- data.frame(Survived = rep("None", nrow(test)),test[,])
data.combined <- rbind(train, test.survived)
data.combined$Survived <- as.factor(data.combined$Survived)
data.combined$Pclass <- as.factor(data.combined$Pclass)
###################################
#Part 1: Understanding the data
#Goal: Test some preliminary hypotheses, identify important features
###################################
#survival rate = 342/(342+549) = 38.38%
table(data.combined$Survived)
#lets do some visualizations
library(ggplot2)
train$Pclass <-as.factor(train$Pclass)
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Pclass, fill = factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
head(as.character(train$Name))
#how many unique across both train and test
length(unique(as.character(data.combined$Name)))
#Two duplicate names, take a closer look
#first, get the duplicate names and store as a vector
dup.names <- as.character(data.combined[which(duplicated(as.character(data.combined$Name))),"Name"])
#now, find those people
data.combined[which(data.combined$Name %in% dup.names),]
ggplot(data.combined[1:891,], aes(x = Sex, fill = factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
#Hypothesis 3: Wealthy women more likely to survive than men
#Result: Confirmed
ggplot(data.combined[1:891,], aes(x=Sex,fill=Survived))+
geom_bar(width = 0.5) +
facet_wrap(~Pclass)+
ggtitle("Pclass")+
xlab("Sex")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=Age,fill=Survived))+
geom_histogram(binwidth = 1) +
facet_wrap(~Sex+Pclass)+
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=Age,fill=Survived))+
geom_histogram(binwidth = 1)
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=Age,fill=Survived))+
geom_histogram(binwidth = 1) +
facet_wrap(~Sex+Pclass)+
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
misses.alone <- misses[which(misses$SibSp == 0 & misses$Parch==0),]
summary(misses.alone$Age)
length(which(misses.alone$Age <=14.5))
summary(boys$Age)
source("titanicHelper.R")
titles <- NULL
for(i in 1:nrow(data.combined)) {
titles <- c(titles,extractTitle2(data.combined[i,"Name"]))
}
titles <- NULL
for(i in 1:nrow(data.combined)) {
titles <- c(titles,extractTitle2(data.combined[i,"Name"]))
}
titles <- c(titles,titanicHelper.extractTitle2(data.combined[i,"Name"]))
source("titanicHelper.R")
extractTitle2()
titles <- NULL
for(i in 1:nrow(data.combined)) {
titles <- c(titles,extractTitle2(data.combined[i,"Name"]))
}
library(stringr)
library(stringr)
library(ggplot2)
titles <- NULL
for(i in 1:nrow(data.combined)) {
titles <- c(titles,getTitle(data.combined[i,"Name"]))
}
data.combined$title <- as.factor(titles)
titles <- NULL
for(i in 1:nrow(data.combined)) {
titles <- c(titles,getTitle(data.combined[i,"Name"]))
}
source("titanicHelper.R")
for(i in 1:nrow(data.combined)) {
titles <- c(titles,getTitle(data.combined[i,"Name"]))
}
data.combined$title <- as.factor(titles)
ggplot(data.combined[1:891,], aes(x=title,fill=Survived))+
geom_bar(width = 0.5) +
facet_wrap(~Pclass)+
ggtitle("Pclass")+
xlab("Title")+
ylab("Total Count")+
labs(fill="Survived")
boys <- data.combined[which(data.combined$title=="Master."),]
summary(boys$Age)
summary(boys$Age)
summary(boys$Sex)
summary(data.combined[which(data.combined$title=="Master."),])
survived.temp <-as.factor(train$Survived)
mutinformation(survived.temp, data.combined$Pclass[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Pclass[1:891])
?mutinformation
str(data.combined)
mutinformation(as.factor(data.combined$Survived[1:891]), discretize(data.combined$fare[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), discretize(data.combined$fare[1:891]))
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Pclass[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), discretize(data.combined$fare[1:891]))
mutinformation(as.factor(data.combined$Survived[1:891]), discretize(data.combined$Fare[1:891]))
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Pclass[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Sex[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Age[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$SibSp[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$Parch[1:891])
mutinformation(as.factor(data.combined$Survived[1:891]), discretize(data.combined$Fare[1:891]))
mutinformation(as.factor(data.combined$Survived[1:891]), data.combined$title[1:891])
length(unique(data.combined$SibSp))
data.combined$SibSp <- as.factor(data.combined$SibSp)
ggplot(data.combined[1:891,], aes(x=SibSp,fill=Survived))+
geom_bar(width = 0.5) +
facet_wrap(~Pclass+title)+
ggtitle("Pclass,title")+
xlab("SibSp")+
ylab("Total Count")+
labs(fill="Survived")
data.combined$family.size<- as.factor(c(train$SibSp,test$SibSp+c(train$Parch,test$Parch)+1)
data.combined$family.size<- as.factor(c(train$SibSp,test$SibSp)+c(train$Parch,test$Parch)+1)
data.combined$family.size<- as.factor(c(train$SibSp,test$SibSp)+c(train$Parch,test$Parch)+1)
gplot(data.combined[1:891,], aes(x=family.size,fill=Survived))+
geom_histogram(binwidth = 1)
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=Age,fill=Survived))+
geom_histogram(binwidth = 1)
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=Age,fill=Survived))+
geom_histogram(binwidth = 1) +
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
data.combined$family.size<- as.factor(c(train$SibSp,test$SibSp)+c(train$Parch,test$Parch)+1)
ggplot(data.combined[1:891,], aes(x=family.size,fill=Survived))+
geom_histogram(binwidth = 1) +
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
data.combined$family.size<- as.factor(c(train$SibSp,test$SibSp)+c(train$Parch,test$Parch)+1)
ggplot(data.combined[1:891,], aes(x=family.size,fill=Survived))+
geom_bar(binwidth = 1) +
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=family.size,fill=Survived))+
geom_bar() +
ggtitle("Age")+
xlab("Age")+
ylab("Total Count")+
labs(fill="Survived")
library(ggplot2)
library(randomForest)
rf.train.1 <- data.combined[1:891, c("Pclass","title")]
rf.label <-as.factor(train$Survived)
set.seed(1234)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
set.seed(1)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
rf.1
varImpPlot(rf.1)
rf.train.1 <- data.combined[1:891, c("Pclass","title")]
set.seed(1)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
rf.train.2 <- data.combined[1:891, c("Pclass","family.size")]
set.seed(1)
rf.2 <- randomForest(x = rf.train.2, y = rf.label, importance = TRUE, ntree = 1000)
rf.2
varImpPlot(rf.2)
rf.train.1 <- data.combined[1:891, c("Pclass","title")]
set.seed(1)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
rf.train.2 <- data.combined[1:891, c("Pclass","family.size")]
set.seed(1)
rf.2 <- randomForest(x = rf.train.2, y = rf.label, importance = TRUE, ntree = 1000)
rf.2
varImpPlot(rf.2)
rf.train.1 <- data.combined[1:891, c("Pclass","Sex")]
set.seed(1)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
#RF.1 - PClass, Sex
rf.train.1 <- data.combined[1:891, c("Pclass","Sex")]
set.seed(1)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1
varImpPlot(rf.1)
#RF.2 - PClass, title
rf.train.2 <- data.combined[1:891, c("Pclass","title")]
set.seed(1)
rf.2 <- randomForest(x = rf.train.2, y = rf.label, importance = TRUE, ntree = 1000)
rf.2
varImpPlot(rf.2)
# RF.3 - PClass, family.size
rf.train.3 <- data.combined[1:891, c("Pclass","family.size")]
set.seed(1)
rf.3 <- randomForest(x = rf.train.3, y = rf.label, importance = TRUE, ntree = 1000)
rf.3
varImpPlot(rf.3)
# RF.4 - PClass, title, family.size
rf.train.4 <- data.combined[1:891, c("Pclass","title", "family.size")]
set.seed(1)
rf.4 <- randomForest(x = rf.train.4, y = rf.label, importance = TRUE, ntree = 1000)
rf.4
varImpPlot(rf.4)
test.submit.df <- data.combined[892:1309, c("Pclass","title", "family.size")]
rf.5.preds <- predict(rf.5, test.submit.df)
table(rf.5.preds)
test.only <- data.combined[892:1309, c("Pclass","title", "family.size")]
rf.5.predictions <- predict(rf.5, test.only)
rf.5.predictions <- predict(rf.5, test.only)
rf.5.predictions <- predict(rf.5, test.only)
rf.5.predictions <- predict(rf.5, test.only)
submit <- data.frame(PassengerId = rep(892:1309), Survived = rf.5.predictions)
write.csv(submit,file = "rf_sub_1.csv", row.names = FALSE)
write.csv(submit,file = "submission_v1.csv", row.names = FALSE)
rf.5.cv.3
cv.10.folds <- createMultiFolds(rf.label, k=10, times = 10)
rf.5.cv.1
prp(rpart.1.cv.1$finalModel, type = 0, extra = 1, under = TRUE)
rpart.cv <- function(seed, training, labels, ctrl){
cl<- makeCluster(4,type = "SOCK")
registerDoSNOW((cl))
set.seed(seed)
rpart.cv <- train(x=training, y = labels, method= "rpart", tuneLength = 30, trControl = ctrl)
stopCluster(cl)
return(rpart.cv)
}
table(data.combined$title)
name.splits <-str_split(sapply(name.splits,"[", 2)," ")
titles <- sapply(name.splits, "[",2)
unique( titles)
name.splits <-str_split(sapply(name.splits,"[", 2)," ")
titles <- sapply(name.splits, "[",2)
unique( titles)
name.splits <- str_split(data.combined$Name,",")
name.splits <-str_split(sapply(name.splits,"[", 2)," ")
titles <- sapply(name.splits, "[",2)
unique( titles)
data.combined$Name
name.splits <-str_split(sapply(str_split(data.combined$Name,","),"[", 2)," ")
titles <- sapply(name.splits, "[",2)
unique(titles)
titles <- sapply(str_split(data.combined$Name,","), "[",2)
unique(titles)
name.splits <-str_split(sapply(str_split(data.combined$Name,","),"[", 2)," ")
titles <- sapply(name.splits, "[",2)
unique(titles)
temp.title <-str_split(sapply(str_split(data.combined$Name,","),"[", 2)," ")
titles <- sapply(temp.title, "[",2)
unique(titles)
data.combined$new.title <- as.factor(titles)
ggplot(data.combined[1:891,], aes(x=new.title,fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("survival rates for new.titles by pclass")
#group females together, males together
indexes <- which(data.combined$new.title == "Lady.")
data.combined$new.title[indexes] <- "Mrs."
indexes <- which(data.combined$new.title == "Dr." |
data.combined$new.title == "Rev." |
data.combined$new.title == "Sir." |
data.combined$new.title == "Officer")
data.combined$new.title[indexes] <- "Mr."
table(data.combined$new.title)
titles[titles %in% c("Ms.","Mlle.")] <- "Miss."
titles[titles %in% c("Mme.","Lady.","Dona.","the")] <- "Mrs."
titles[titles %in% c("Jonkheer.","Don.", "Col.","Capt.", "Major.")] <- "Mr."
table(titles)
titles[titles %in% c("Jonkheer.","Don.", "Col.","Capt.", "Major.","Rev.", "Sir.")] <- "Mr."
titles[titles %in% c("Ms.","Mlle.")] <- "Miss."
titles[titles %in% c("Mme.","Lady.","Dona.","the")] <- "Mrs."
titles[titles %in% c("Jonkheer.","Don.", "Col.","Capt.", "Major.","Rev.", "Sir.","Dr.")] <- "Mr."
table(titles)
data.combined$title.2 <- as.factor(titles)
indexes <- which(data.combined$title.2 == "Mr." & data.combined$Sex == "female")
data.combined$title.2[indexes] <- "Mrs."
table(data.combined$title.2)
ggplot(data.combined[1:891,], aes(x=title.2,fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("survival rates for new titles by pclass")
features <- c("Pclass","title.2","family.size")
rpart.train.2 <- data.combined[1:891,features]
rpart.2.cv.1 <-rpart.cv(1,rpart.train.2,rf.label,ctrl.3)
rpart.2.cv.1
prp(rpart.2.cv.1$finalModel,type= 0, extra = 1, under = TRUE)
rpart.1.cv.1
party.size <- rep(0,nrow(data.combined))
average.party.fare <- rep(0.0, nrow(data.combined))
tickets.unique <- unique(data.combined$Ticket)
for(i in 1:length(tickets.unique)){
current <- tickets.unique[i]
indexes <- which(data.combined$Ticket == current)
current.average.fare<-data.combined[indexes[1],"Fare"]/length(indexes)
for(k in 1:length(indexes)){
party.size[indexes[k]] <- length(indexes)
average.party.fare[indexes[k]] <- current.average.fare
}
}
data.combined$party.size <- party.size
table(party.size)
data.combined$party.size <- party.size
data.combined$average.party.fare <- average.party.fare
View(data.combined)
ggplot(first.mr.df, aes(x=party.size, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
first.mr.df <-data.combined[indexes.first.mr, ]
summary(first.mr.df)
#check out ticket party size
ggplot(first.mr.df, aes(x=ticket.party.size, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
#check out ticket party size
ggplot(first.mr.df, aes(x=party.size, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df[1:891,], aes(x=party.size, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df[first.mr.df$Survived!="None",], aes(x=avg.fare, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
ggplot(first.mr.df[first.mr.df$Survived!="None",], aes(x=average.party.fare, fill = Survived)) +
geom_density(alpha=0.5) +
ggtitle("1st class mr. survival rates")
data.combined[is.na(average.party.fare), "average.party.fare"] <- 7.840
features <- c("Pclass", "new.title", "party.size", "average.party.fare")
rpart.train.3 <-data.combined[1:891, features]
rpart.3.cv.1 <-rpart.cv(1, rpart.train.3, rf.label, ctrl.3)
rpart.3.cv.1
prp(rpart.3.cv.1$finalModel, type =0, extra = 1, under = TRUE)
prp(rpart.3.cv.1$finalModel, type =0, extra = 1, under = TRUE)
features <- c("Pclass", "title.2", "party.size", "average.party.fare")
rpart.train.3 <-data.combined[1:891, features]
rpart.3.cv.1 <-rpart.cv(1, rpart.train.3, rf.label, ctrl.3)
rpart.3.cv.1
prp(rpart.3.cv.1$finalModel, type =0, extra = 1, under = TRUE)
features <- c("Pclass", "title.2", "party.size", "average.party.fare")
rf.train.5 <-data.combined[1:891, features]
set.seed(1)
rf.5 <- randomForest(x=rf.train.5, y=rf.label, ntree=1000)
rf.5
test.only <- data.combined[892:1309, c("Pclass","title.2", "party.size", "average.party.fare")]
rf.prediction <- predict(rf.5, test.only)
table(rf.prediction)
submit <- data.frame(PassengerId = rep(892:1309), Survived = rf.4.prediction)
table(rf.5.prediction)
submit <- data.frame(PassengerId = rep(892:1309), Survived = rf.5.prediction)
rf.5.prediction <- predict(rf.5, test.only)
table(rf.5.prediction)
submit <- data.frame(PassengerId = rep(892:1309), Survived = rf.5.prediction)
write.csv(submit,file = "submission_v2.csv", row.names = FALSE)
ggplot(data.combined[1:891,], aes(x=title,fill=Survived))+
geom_bar(width = 0.5) +
facet_wrap(~Pclass)+
ggtitle("Pclass")+
xlab("Title")+
ylab("Total Count")+
labs(fill="Survived")
ggplot(data.combined[1:891,], aes(x=title.2,fill=Survived))+
geom_bar(width = 0.5) +
facet_wrap(~Pclass)+
ggtitle("Pclass")+
xlab("Title")+
ylab("Total Count")+
labs(fill="Survived")
indexes.first.mr <- which(data.combined$title.2 == "Mr." & data.combined$Pclass == "1")
first.mr.df <- data.combined[indexes.first.mr, ]
summary(first.mr.df)
ggplot(first.mr.df, aes(x = fare, fill = survived)) +
geom_density(alpha = 0.5) +
ggtitle("1st Class 'Mr.' Survival Rates by fare")
ggplot(first.mr.df, aes(x = average.party.fare, fill = survived)) +
geom_density(alpha = 0.5) +
ggtitle("1st Class 'Mr.' Survival Rates by fare")
ggplot(first.mr.df, aes(x = average.party.fare, fill = Survived)) +
geom_density(alpha = 0.5) +
ggtitle("1st Class 'Mr.' Survival Rates by fare")
ggplot(first.mr.df[first.mr.df$Survived != "None",], aes(x = average.party.fare, fill = Survived)) +
geom_density(alpha = 0.5) +
ggtitle("Survival Rates 1st Class 'Mr.' by avg.fare")
ggplot(first.mr.df[first.mr.df$Survived != "None",], aes(x = title, fill = Survived)) +
geom_bar() +
ggtitle("Survival Rates 1st Class 'Mr.' by avg.fare")
#Hypothesis - Could cabin placement be an issue? Whereas women and children almost definitely got seats, could it have been on a first-come-first serve basis for men,
